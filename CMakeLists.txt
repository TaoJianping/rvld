# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(rvld LANGUAGES CXX C)

# target
add_executable(rvld "")
set_target_properties(rvld PROPERTIES OUTPUT_NAME "rvld")
set_target_properties(rvld PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/debug")
target_include_directories(rvld PRIVATE
    src/utils
)
target_include_directories(rvld SYSTEM PRIVATE
    /home/tao/.xmake/packages/b/boost/1.84.0/5a6a018d36ab4898a6d55941f29e9692/include
    /home/tao/.xmake/packages/b/bzip2/1.0.8/8db6bd46210f4711a452b7767b44748c/include
    /home/tao/.xmake/packages/s/spdlog/v1.12.0/e24126f106564f7c97234caa2b9c81c5/include
)
target_compile_definitions(rvld PRIVATE
    PROJECT_DIR="/home/tao/projects/rvld"
)
target_compile_options(rvld PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(rvld PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(rvld PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(rvld PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(rvld PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(rvld PRIVATE -Zi)
else()
    target_compile_options(rvld PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET rvld PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(rvld PRIVATE
    boost_atomic-mt
    boost_program_options-mt
    boost_filesystem-mt
    bz2
    z
    pthread
    dl
)
target_link_directories(rvld PRIVATE
    /home/tao/.xmake/packages/b/boost/1.84.0/5a6a018d36ab4898a6d55941f29e9692/lib
    /home/tao/.xmake/packages/b/bzip2/1.0.8/8db6bd46210f4711a452b7767b44748c/lib
)
target_link_options(rvld PRIVATE
    -m64
)
target_sources(rvld PRIVATE
    src/MergedSection.cpp
    src/main.cpp
    src/OutputEhdr.cpp
    src/InputSection.cpp
    src/Linker.cpp
    src/OutputSHdr.cpp
    src/MergeableSection.cpp
    src/OutputPhdr.cpp
    src/Context.cpp
    src/OutputSection.cpp
    src/Chunk.cpp
    src/ELFFile.cpp
    src/Symbol.cpp
    src/utils/file/BytesReader.cpp
    src/utils/file/Bytes.cpp
    src/utils/file/InputFile.cpp
    src/utils/file/Archive.cpp
    src/utils/file/OutputFile.cpp
)

# target
add_executable(test "")
set_target_properties(test PROPERTIES OUTPUT_NAME "test")
set_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/debug")
target_include_directories(test PRIVATE
    src/utils
)
target_include_directories(test SYSTEM PRIVATE
    /home/tao/.xmake/packages/b/boost/1.84.0/5a6a018d36ab4898a6d55941f29e9692/include
    /home/tao/.xmake/packages/b/bzip2/1.0.8/8db6bd46210f4711a452b7767b44748c/include
    /home/tao/.xmake/packages/s/spdlog/v1.12.0/e24126f106564f7c97234caa2b9c81c5/include
    /home/tao/.xmake/packages/g/gtest/v1.14.0/1396d24d20ce4a17a0d869a0dd56d9ba/include
)
target_compile_definitions(test PRIVATE
    PROJECT_DIR="/home/tao/projects/rvld"
)
target_compile_options(test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
set_target_properties(test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test PRIVATE -Zi)
else()
    target_compile_options(test PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test PRIVATE
    boost_atomic-mt
    boost_program_options-mt
    boost_filesystem-mt
    bz2
    z
    gtest
    gmock
    pthread
    dl
)
target_link_directories(test PRIVATE
    /home/tao/.xmake/packages/b/boost/1.84.0/5a6a018d36ab4898a6d55941f29e9692/lib
    /home/tao/.xmake/packages/b/bzip2/1.0.8/8db6bd46210f4711a452b7767b44748c/lib
    /home/tao/.xmake/packages/g/gtest/v1.14.0/1396d24d20ce4a17a0d869a0dd56d9ba/lib
)
target_link_options(test PRIVATE
    -m64
)
target_sources(test PRIVATE
    src/utils/file/BytesReader.cpp
    src/utils/file/Bytes.cpp
    src/utils/file/InputFile.cpp
    src/utils/file/Archive.cpp
    src/utils/file/OutputFile.cpp
    tests/TestFile.cpp
    tests/TestMain.cpp
)

